/*
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { OktaAuthService } from '../services/okta.service';
var OktaCallbackComponent = /** @class */ (function () {
    function OktaCallbackComponent(okta, router) {
        this.okta = okta;
        this.router = router;
    }
    OktaCallbackComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri
                        return [4 /*yield*/, this.okta.handleLoginRedirect()];
                    case 1:
                        // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        e_1 = _a.sent();
                        this.error = e_1.toString();
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    OktaCallbackComponent = tslib_1.__decorate([
        Component({
            template: "<div>{{error}}</div>"
        }),
        tslib_1.__metadata("design:paramtypes", [OktaAuthService, Router])
    ], OktaCallbackComponent);
    return OktaCallbackComponent;
}());
export { OktaCallbackComponent };
//# sourceMappingURL=callback.component.js.map