{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/packageInfo.ts","../package/src/okta/services/okta.service.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/components/login-redirect.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/createService.ts","../package/src/okta/okta.module.ts"],"names":["tslib_1.__param"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\nimport { OktaAuthOptions } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuthService, injector: Injector) => void;\nexport type IsAuthenticatedFunction = (oktaAuth: OktaAuthService) => Promise<boolean>;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig extends OktaAuthOptions {\n  onAuthRequired?: AuthRequiredFunction;\n  testing?: TestingObject;\n  isAuthenticated?: IsAuthenticatedFunction;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '3.0.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OKTA_CONFIG, OktaConfig } from '../models/okta.config';\n\n// eslint-disable-next-line node/no-unpublished-import\nimport packageInfo from '../packageInfo';\n\n/**\n * Import the okta-auth-js library\n */\nimport {\n  OktaAuth,\n  AuthState,\n  OktaAuthOptions,\n  isAbsoluteUrl,\n  toAbsoluteUrl,\n  toRelativeUrl,\n  SigninWithRedirectOptions\n} from '@okta/okta-auth-js';\n\nimport { Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class OktaAuthService extends OktaAuth {\n    private config: OktaConfig;\n    private observers: Observer<boolean>[];\n    private location?: Location;\n\n    $authenticationState: Observable<boolean>;\n\n    constructor(@Inject(OKTA_CONFIG) config: OktaConfig, @Optional() location?: Location, @Optional() router?: Router) {\n\n      // If a relative `redirectUri` was passed, convert to absolute URL, including base href, if any.\n      if (config.redirectUri && !isAbsoluteUrl(config.redirectUri) && location) {\n        const baseUri = window.location.origin + location.prepareExternalUrl('');\n        config.redirectUri = toAbsoluteUrl(config.redirectUri, baseUri);\n      }\n\n      const transformAuthState = async (oktaAuth: OktaAuth, authState: AuthState) => {\n        // if `isAuthenticated` was set on config, call it now to override the value of `authState.isAuthenticated`\n        if (config.isAuthenticated) {\n          authState.isAuthenticated = await config.isAuthenticated(this);\n        }\n        // if `transformAuthState` was set on config, call it now to transform the authState object\n        if (config.transformAuthState) {\n          authState = await config.transformAuthState(oktaAuth, authState);\n        }\n        return authState;\n      };\n      \n      // If a router is available, provide a default implementation of `restoreOriginalUri`\n      const restoreOriginalUri = (!config.restoreOriginalUri && router && location) ? async (oktaAuth: OktaAuth, originalUri: string) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri, baseUrl);\n        return router.navigateByUrl(routePath);\n      } : config.restoreOriginalUri;\n\n      const options: OktaAuthOptions = Object.assign({\n        transformAuthState,\n        restoreOriginalUri\n      }, config);\n\n      super(options);\n\n      this.config = config;\n      this.location = location;\n\n      // Customize user agent\n      this.userAgent = `${packageInfo.name}/${packageInfo.version} ${this.userAgent}`;\n\n      // Initialize observers\n      this.observers = [];\n      this.$authenticationState = new Observable((observer: Observer<boolean>) => { this.observers.push(observer); });\n\n      this.authStateManager.subscribe((authState: AuthState) => {\n        this.emitAuthenticationState(!!authState.isAuthenticated);\n      });\n      if (!this.token.isLoginRedirect()) {\n        // Trigger an initial change event to make sure authState is latest\n        this.authStateManager.updateAuthState();\n      }\n    }\n\n    private async emitAuthenticationState(state: boolean) {\n      this.observers.forEach(observer => observer.next(state));\n    }\n\n    async signInWithRedirect(options: SigninWithRedirectOptions = {}): Promise<void> {\n      const originalUri = options.originalUri || this.getOriginalUri();\n      if (!originalUri) {\n        // Default to the app base as a relative path.\n        options.originalUri = '/';\n      }\n      return super.signInWithRedirect(options);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n    async signOut(options?: any): Promise<void> {\n      options = options || {};\n      const postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri;\n      if (!postLogoutRedirectUri && this.location) {\n        // Default to the app base as an absolute URL, including base href, if any.\n        options.postLogoutRedirectUri = window.location.origin + this.location.prepareExternalUrl('/'); // include trailing slash\n      }\n      return super.signOut(options);\n    }\n\n    /**\n     * Returns the configuration object used.\n     */\n    getOktaConfig(): OktaConfig {\n      return this.config;\n    }\n\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.okta.handleLoginRedirect();\n    } catch (e) {\n      this.error = e.toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({ template: `` })\nexport class OktaLoginRedirectComponent implements OnInit {\n  constructor(private okta: OktaAuthService) {}\n  ngOnInit(): void {\n    const originalUri = this.okta.getOriginalUri();\n    if (!originalUri) {\n      this.okta.setOriginalUri('/');\n    }\n    this.okta.signInWithRedirect();\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AuthState } from '@okta/okta-auth-js';\n\nimport { OktaAuthService } from './services/okta.service';\nimport { AuthRequiredFunction } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild {\n  private route: ActivatedRouteSnapshot;\n  private state: RouterStateSnapshot;\n\n  constructor(private oktaAuth: OktaAuthService, private injector: Injector) { \n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.route = route;\n    this.state = state;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(fromUri: string): Promise<void> {\n     // Get the operation to perform on failed authentication from\n     // either the global config or route data injection.\n    const onAuthRequired: AuthRequiredFunction = this.route.data['onAuthRequired'] || this.oktaAuth.getOktaConfig().onAuthRequired;\n    \n    // Store the current path\n    this.oktaAuth.setOriginalUri(fromUri);\n\n    if (onAuthRequired) {\n      onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaConfig } from './models/okta.config';\nimport { OktaAuthService } from './services/okta.service';\n\nexport function createOktaService(config: OktaConfig, location?: Location, router?: Router): OktaAuthService {\n  return new OktaAuthService(config, location, router);\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaLoginRedirectComponent } from './components/login-redirect.component';\nimport { OktaAuthService } from './services/okta.service';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OKTA_CONFIG } from './models/okta.config';\nimport { createOktaService } from './createService';\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  providers: [\n    OktaAuthGuard,\n    {\n      provide: OktaAuthService,\n      useFactory: createOktaService,\n      deps: [\n        OKTA_CONFIG,\n        Location, // optional\n        Router // optional\n      ]\n    }\n  ]\n})\nexport class OktaAuthModule {\n\n}\n"]}