import { Injector } from '@angular/core';
import { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { OktaAuthService } from './services/okta.service';
import * as ɵngcc0 from '@angular/core';
export declare class OktaAuthGuard implements CanActivate, CanActivateChild {
    private oktaAuth;
    private injector;
    private route;
    private state;
    constructor(oktaAuth: OktaAuthService, injector: Injector);
    /**
     * Gateway for protected route. Returns true if there is a valid accessToken,
     * otherwise it will cache the route and start the login flow.
     * @param route
     * @param state
     */
    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>;
    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean>;
    private handleLogin;
    private updateAuthStateListener;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OktaAuthGuard, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<OktaAuthGuard>;
}

//# sourceMappingURL=okta.guard.d.ts.map