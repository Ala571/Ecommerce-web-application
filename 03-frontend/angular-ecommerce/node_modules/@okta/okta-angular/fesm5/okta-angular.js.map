{"version":3,"file":"okta-angular.js","sources":["../package/src/okta/models/okta.config.ts","../package/src/okta/packageInfo.ts","../package/src/okta/services/okta.service.ts","../package/src/okta/components/callback.component.ts","../package/src/okta/components/login-redirect.component.ts","../package/src/okta/okta.guard.ts","../package/src/okta/createService.ts","../package/src/okta/okta.module.ts"],"sourcesContent":["/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { InjectionToken, Injector } from '@angular/core';\nimport { OktaAuthService } from '../services/okta.service';\nimport { OktaAuthOptions } from '@okta/okta-auth-js';\n\nexport type AuthRequiredFunction = (oktaAuth: OktaAuthService, injector: Injector) => void;\nexport type IsAuthenticatedFunction = (oktaAuth: OktaAuthService) => Promise<boolean>;\n\nexport interface TestingObject {\n  disableHttpsCheck: boolean;\n}\n\nexport interface OktaConfig extends OktaAuthOptions {\n  onAuthRequired?: AuthRequiredFunction;\n  testing?: TestingObject;\n  isAuthenticated?: IsAuthenticatedFunction;\n}\n\nexport const OKTA_CONFIG = new InjectionToken<OktaConfig>('okta.config.angular');\n","export default {\n  'name': '@okta/okta-angular',\n  'version': '3.0.1'\n};\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OKTA_CONFIG, OktaConfig } from '../models/okta.config';\n\n// eslint-disable-next-line node/no-unpublished-import\nimport packageInfo from '../packageInfo';\n\n/**\n * Import the okta-auth-js library\n */\nimport {\n  OktaAuth,\n  AuthState,\n  OktaAuthOptions,\n  isAbsoluteUrl,\n  toAbsoluteUrl,\n  toRelativeUrl,\n  SigninWithRedirectOptions\n} from '@okta/okta-auth-js';\n\nimport { Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\n\n@Injectable()\nexport class OktaAuthService extends OktaAuth {\n    private config: OktaConfig;\n    private observers: Observer<boolean>[];\n    private location?: Location;\n\n    $authenticationState: Observable<boolean>;\n\n    constructor(@Inject(OKTA_CONFIG) config: OktaConfig, @Optional() location?: Location, @Optional() router?: Router) {\n\n      // If a relative `redirectUri` was passed, convert to absolute URL, including base href, if any.\n      if (config.redirectUri && !isAbsoluteUrl(config.redirectUri) && location) {\n        const baseUri = window.location.origin + location.prepareExternalUrl('');\n        config.redirectUri = toAbsoluteUrl(config.redirectUri, baseUri);\n      }\n\n      const transformAuthState = async (oktaAuth: OktaAuth, authState: AuthState) => {\n        // if `isAuthenticated` was set on config, call it now to override the value of `authState.isAuthenticated`\n        if (config.isAuthenticated) {\n          authState.isAuthenticated = await config.isAuthenticated(this);\n        }\n        // if `transformAuthState` was set on config, call it now to transform the authState object\n        if (config.transformAuthState) {\n          authState = await config.transformAuthState(oktaAuth, authState);\n        }\n        return authState;\n      };\n      \n      // If a router is available, provide a default implementation of `restoreOriginalUri`\n      const restoreOriginalUri = (!config.restoreOriginalUri && router && location) ? async (oktaAuth: OktaAuth, originalUri: string) => {\n        const baseUrl = window.location.origin + location.prepareExternalUrl('');\n        const routePath = toRelativeUrl(originalUri, baseUrl);\n        return router.navigateByUrl(routePath);\n      } : config.restoreOriginalUri;\n\n      const options: OktaAuthOptions = Object.assign({\n        transformAuthState,\n        restoreOriginalUri\n      }, config);\n\n      super(options);\n\n      this.config = config;\n      this.location = location;\n\n      // Customize user agent\n      this.userAgent = `${packageInfo.name}/${packageInfo.version} ${this.userAgent}`;\n\n      // Initialize observers\n      this.observers = [];\n      this.$authenticationState = new Observable((observer: Observer<boolean>) => { this.observers.push(observer); });\n\n      this.authStateManager.subscribe((authState: AuthState) => {\n        this.emitAuthenticationState(!!authState.isAuthenticated);\n      });\n      if (!this.token.isLoginRedirect()) {\n        // Trigger an initial change event to make sure authState is latest\n        this.authStateManager.updateAuthState();\n      }\n    }\n\n    private async emitAuthenticationState(state: boolean) {\n      this.observers.forEach(observer => observer.next(state));\n    }\n\n    async signInWithRedirect(options: SigninWithRedirectOptions = {}): Promise<void> {\n      const originalUri = options.originalUri || this.getOriginalUri();\n      if (!originalUri) {\n        // Default to the app base as a relative path.\n        options.originalUri = '/';\n      }\n      return super.signInWithRedirect(options);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n    async signOut(options?: any): Promise<void> {\n      options = options || {};\n      const postLogoutRedirectUri = options.postLogoutRedirectUri || this.options.postLogoutRedirectUri;\n      if (!postLogoutRedirectUri && this.location) {\n        // Default to the app base as an absolute URL, including base href, if any.\n        options.postLogoutRedirectUri = window.location.origin + this.location.prepareExternalUrl('/'); // include trailing slash\n      }\n      return super.signOut(options);\n    }\n\n    /**\n     * Returns the configuration object used.\n     */\n    getOktaConfig(): OktaConfig {\n      return this.config;\n    }\n\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({\n  template: `<div>{{error}}</div>`\n})\nexport class OktaCallbackComponent implements OnInit {\n  error: string;\n\n  constructor(private okta: OktaAuthService, private router: Router) {}\n\n  async ngOnInit(): Promise<void> {\n    try {\n      // Parse code or tokens from the URL, store tokens in the TokenManager, and redirect back to the originalUri\n      await this.okta.handleLoginRedirect();\n    } catch (e) {\n      this.error = e.toString();\n    }\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { OktaAuthService } from '../services/okta.service';\n\n@Component({ template: `` })\nexport class OktaLoginRedirectComponent implements OnInit {\n  constructor(private okta: OktaAuthService) {}\n  ngOnInit(): void {\n    const originalUri = this.okta.getOriginalUri();\n    if (!originalUri) {\n      this.okta.setOriginalUri('/');\n    }\n    this.okta.signInWithRedirect();\n  }\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  CanActivate,\n  CanActivateChild,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  NavigationStart\n} from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AuthState } from '@okta/okta-auth-js';\n\nimport { OktaAuthService } from './services/okta.service';\nimport { AuthRequiredFunction } from './models/okta.config';\n\n@Injectable()\nexport class OktaAuthGuard implements CanActivate, CanActivateChild {\n  private route: ActivatedRouteSnapshot;\n  private state: RouterStateSnapshot;\n\n  constructor(private oktaAuth: OktaAuthService, private injector: Injector) { \n    // Unsubscribe updateAuthStateListener when route change\n    const router = injector.get(Router);\n    router.events.pipe(\n      filter((e: Event) => e instanceof NavigationStart && this.state && this.state.url !== e.url)\n    ).subscribe(() => {\n      this.oktaAuth.authStateManager.unsubscribe(this.updateAuthStateListener);\n    });\n  }\n\n  /**\n   * Gateway for protected route. Returns true if there is a valid accessToken,\n   * otherwise it will cache the route and start the login flow.\n   * @param route\n   * @param state\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    // Track states for current route\n    this.route = route;\n    this.state = state;\n\n    // Protect the route after accessing\n    this.oktaAuth.authStateManager.subscribe(this.updateAuthStateListener);\n    const isAuthenticated = await this.oktaAuth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    }\n\n    await this.handleLogin(state.url);\n\n    return false;\n  }\n\n  async canActivateChild(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return this.canActivate(route, state);\n  }\n\n  private async handleLogin(fromUri: string): Promise<void> {\n     // Get the operation to perform on failed authentication from\n     // either the global config or route data injection.\n    const onAuthRequired: AuthRequiredFunction = this.route.data['onAuthRequired'] || this.oktaAuth.getOktaConfig().onAuthRequired;\n    \n    // Store the current path\n    this.oktaAuth.setOriginalUri(fromUri);\n\n    if (onAuthRequired) {\n      onAuthRequired(this.oktaAuth, this.injector);\n    } else {\n      this.oktaAuth.signInWithRedirect();\n    }\n  }\n\n  private updateAuthStateListener = (authState: AuthState) => {\n    if (!authState.isAuthenticated) {\n      this.handleLogin(this.state.url);\n    }\n  };\n\n}\n","import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaConfig } from './models/okta.config';\nimport { OktaAuthService } from './services/okta.service';\n\nexport function createOktaService(config: OktaConfig, location?: Location, router?: Router): OktaAuthService {\n  return new OktaAuthService(config, location, router);\n}\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { OktaCallbackComponent } from './components/callback.component';\nimport { OktaLoginRedirectComponent } from './components/login-redirect.component';\nimport { OktaAuthService } from './services/okta.service';\nimport { OktaAuthGuard } from './okta.guard';\nimport { OKTA_CONFIG } from './models/okta.config';\nimport { createOktaService } from './createService';\n\n@NgModule({\n  declarations: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  exports: [\n    OktaCallbackComponent,\n    OktaLoginRedirectComponent,\n  ],\n  providers: [\n    OktaAuthGuard,\n    {\n      provide: OktaAuthService,\n      useFactory: createOktaService,\n      deps: [\n        OKTA_CONFIG,\n        Location, // optional\n        Router // optional\n      ]\n    }\n  ]\n})\nexport class OktaAuthModule {\n\n}\n"],"names":["tslib_1.__extends","tslib_1.__param"],"mappings":"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"}