/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */
export declare function stringToBase64Url(str: any): any;
export declare function base64ToBase64Url(b64: any): any;
export declare function base64UrlToBase64(b64u: any): any;
export declare function base64UrlToString(b64u: any): string;
export declare function stringToBuffer(str: any): Uint8Array;
export declare function base64UrlDecode(str: any): string;
export declare function bind(fn: any, ctx: any): () => any;
export declare function isAbsoluteUrl(url: any): boolean;
export declare function toAbsoluteUrl(url: string, baseUrl: any): string;
export declare function toRelativeUrl(url: string, baseUrl: any): string;
export declare function isString(obj: any): obj is string;
export declare function isObject(obj: any): obj is object;
export declare function isNumber(obj: any): obj is number;
export declare function isoToUTCString(str: any): string;
export declare function toQueryString(obj: any): string;
export declare function genRandomString(length: any): string;
export declare function extend(): any;
export declare function removeNils(obj: any): {};
export declare function clone(obj: any): any;
export declare function omit(obj: any, ...props: any[]): any;
export declare function find(collection: any, searchParams: any): any;
export declare function getLink(obj: any, linkName: any, altName?: any): any;
export declare function getNativeConsole(): Console;
export declare function getConsole(): Console | {
    log: () => void;
    warn: () => void;
    group: () => void;
    groupEnd: () => void;
};
export declare function warn(text: any): void;
export declare function deprecate(text: any): void;
export declare function deprecateWrap(text: any, fn: any): () => any;
export declare function removeTrailingSlash(path: any): any;
export declare function isIE11OrLess(): boolean;
export declare function isFunction(fn: any): fn is Function;
export declare function delay(ms: any): Promise<unknown>;
export declare function isPromise(obj: any): boolean;
